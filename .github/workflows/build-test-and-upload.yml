name: Build, Test and Upload

on:
  push:
    tags:
      # Regex for a version number such as 0.2.1
      - "[0-9]+.[0-9]+.[0-9]+"
      
env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-and-upload:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - name: macos-amd64
            os: macos-latest
            target: x86_64-apple-darwin
            
          - name: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin

          - build: windows-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
    - name: Get the release version from the tag
      shell: bash
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: "${{ matrix.target }}"
      
    - name: Setup Cache
      uses: Swatinem/rust-cache@v2
      
    - name: Run tests
      run: cargo test --verbose --locked
      
    - name: Build
      run: cargo build --verbose --locked --release --target ${{ matrix.target }}

    - name: Build archive
      shell: bash
      run: |
        binary_name="train-ute"
    
        dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
        mkdir "$dirname"
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
        else
          mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
        fi
    
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a "$dirname.zip" "$dirname"
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV
        else
          tar -czf "$dirname.tar.gz" "$dirname"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
        fi

    - name: Upload the binaries
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ASSET }}

